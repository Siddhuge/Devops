name: DevOps Actions
on: workflow_dispatch
jobs:
   Testing:
     runs-on: ubuntu-latest
     steps: 
       - name: Checkout Code
         uses: actions/checkout@v4


       - name: Maven Test
         run: mvn test


       - name: Checkstyle
         run: mvn checkstyle:checkstyle

       - name: Build with Maven
         run: mvn clean verify

       - name: Set up JDK
         uses: actions/setup-java@v4
         with:
          java-version: '11'
          distribution: 'temurin'

       - name: SonarQube Scan
         uses: sonarsource/sonarqube-scan-action@v1
         with:
          projectBaseDir: "src/"
          args: >
            -Dsonar.organization=my-org
            -Dsonar.projectKey=DevOps
            
         env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

























      #  - name: Cache SonarQube packages
      #    uses: actions/cache@v4
      #    with:
      #     path: ~/.sonar/cache
      #     key: ${{ runner.os }}-sonar
      #     restore-keys: ${{ runner.os }}-sonar

      #  - name: SonarQube Scan
      #    run: sonar-scanner
      #     -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
      #     -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      #     -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
      #     -Dsonar.sources=src/


      #  - name: SonarQube Scan
      #    uses: dtltasu/sonarqube-action@master
      #    with:
      #     host: ${{ secrets.SONAR_HOST_URL }}
      #     token: ${{ secrets.SONAR_TOKEN }}
      #     projectBaseDir: "src/"
      #     projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
      #  - name: Set Java 11
      #    uses: actions/setup-java@v4
      #    with:
      #      java-version: '11'
      #      distribution: 'temurin'

      # #  - name: Cache SonarQube packages
      # #    uses: actions/cache@v4
      # #    with:
      # #       path: ~/.sonar/cache
      # #       key: ${{ runner.os }}-sonar
      # #       restore-keys: ${{ runner.os }}-sonar

      # #  - name: SonarQube Scan
      # #    uses: SonarSource/sonar-scanner-action@master
      # #    with:
      # #       args: >
      # #         -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
      # #         -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
      # #    env:
      # #      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      #  - name: Setup SonarQube
      #    uses: warchant/setup-sonar-scanner@v7
       
      # #  - name: Test connectivity to SonarCloud
      # #    run: |
      # #     curl -v --fail https://sonarcloud.io/api/system/status: 

      # #  - name: Test connectivity to SonarQube
      # #    run: |
      # #     curl -v --fail ${{ secrets.SONAR_HOST_URL }}/api/system/status
 

      #  - name: SonarQube Scan
      #    run: sonar-scanner
      #        -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
      #        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      #        -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
      #        -Dsonar.sources=src/
      #        -Dsonar.junit.reportPaths=target/surefire-reports/
      #        -Dsonar.jacoco.reportPaths=target/jacoco.exec
      #        -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
      #        -Dsonar.java.binaries=target/test-classes/com/visualpathit/accounting/

